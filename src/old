 /* updateCanvas = (e: Coor) => {
        const canvas: any = document.getElementById('myCanvas')
        const ctx = canvas.getContext('2d');
        console.log(e.left + ' ' + e.top)
        ctx.fillStyle = this.state.baseColor
        if(this.state.baseShape=='Circle'){
            ctx.beginPath();
            ctx.arc(e.left, e.top, 40, 0, 2 * Math.PI);
            ctx.fill();   
        }
        else {
        ctx.fillRect(e.left - 50, e.top - 50, 100, 100)
        }

    }*/
    //castuje u drugi state
   /* setColor = (e: any) => {
        const {name: StateKeys ,value,type,checked} = e.target
        this.setState({
            [name]: value
        } as Pick<MyState, keyof MyState>)
    }*/

     /*   if (this.state.baseShape == 'Circle') {
            shape = new Circle(pro);
        }
        else if (this.state.baseShape == 'CircleFilled') {
            shape = new CircleFilled(pro);
        }
        else if (this.state.baseShape == 'Line' || this.state.baseShape == 'Pen') {
            shape = new Line(pro);
        }
        else if (this.state.baseShape == 'FilledRect') {
            shape = new RectFilled(pro);
        }
        else if (this.state.baseShape == 'CustomRect') {
            shape = new RectCustom(pro)
        }
        else if (this.state.baseShape == 'FilledCustomRect') {
            shape = new RectCustomFilled(pro)
        }
        else if (this.state.baseShape == 'Rect') {
            shape = new Rect(pro);
        }
        else if (this.state.baseShape == 'Text') {
            shape = new Text(pro);
        }
        else {
            shape = new Rect(pro);
        }*/

         /* componentDidMount(){
         fetch("http://www.colr.org/json/colors/random/200")
         .then(response => response.json())
         .then(response => {
             const all = response.colors
             console.log(all)
             this.setState({
                 allColors: all
             })
         })
     }*/

     /*switch (shapeData.shapeName) {
        case 'Circle': shape = new shapeArr[shapeData.shapeName](shapeData); break;
        case 'CircleFilled': shape = new CircleFilled(shapeData); break;
        case 'Line': shape = new Line(shapeData); break;
        case 'Pen': shape = new Line(shapeData); break;
        case 'FilledSquare': shape = new RectFilled(shapeData); break;
        case 'CustomRect': shape = new RectCustom(shapeData); break;
        case 'FilledCustomRect': shape = new RectCustomFilled(shapeData); break;
        case 'Text': shape = new Text(shapeData); break;
        case 'Square': shape = new Rect(shapeData); break;
        default : shape = new Default(shapeData); break;      
    }*/
